version: "3.9"
services:
 prometheus:
   container_name: prometheus
   image: prom/prometheus:v2.51.1
   command: [ "--config.file=/etc/prometheus/prometheus.yml", "--web.enable-remote-write-receiver", "--enable-feature=exemplar-storage" ]
   restart: always
   volumes:
     - ./prometheus.yml:/etc/prometheus/prometheus.yml
   networks:
     - opendutnet

 tempo:
    container_name: tempo
    image: grafana/tempo:2.4.1
    command: [ "-config.file=/etc/tempo.yml" ]
    volumes:
       - ./tempo.yml:/etc/tempo.yml
       - tempo-data:/tmp/tempo
    healthcheck:
      interval: 5s
      retries: 10
      test: wget --proxy off --no-verbose --tries=1 --spider http://tempo:3200/status || exit 1
    networks:
      - opendutnet

 loki:
    container_name: loki
    image: grafana/loki:2.9.6
    volumes:
      - ./loki.yml:/etc/loki/loki.yml
      - loki-data:/loki
    command: ["-config.file=/etc/loki/loki.yml", "-config.expand-env=true"]
    healthcheck:
      test: wget --proxy off --no-verbose --tries=1 --spider http://loki:3100/ready || exit 1
      interval: 10s
      timeout: 7s
      retries: 5
    networks:
      - opendutnet

 promtail:
   image: grafana/promtail:2.9.6
   container_name: promtail
   volumes:
     - ./promtail.yml:/etc/promtail/docker-config.yaml
     - /var/lib/docker/containers:/var/lib/docker/containers:ro
     - /var/run/docker.sock:/var/run/docker.sock:ro
   command: -config.file=/etc/promtail/docker-config.yaml
   depends_on:
     - loki
   networks:
     - opendutnet

 otel-collector:
   container_name: otel-collector
   image: otel/opentelemetry-collector-contrib:0.97.0
   volumes:
     - ./otel-collector.yml:/etc/collector-gateway.yaml
     - /var/lib/docker/containers:/var/lib/docker/containers:ro
     - /var/run/docker.sock:/var/run/docker.sock:ro
     - "../../../resources/development/tls/:/opendut-tls/:ro"
   environment:
     - "SSL_CERT_FILE=/opendut-tls/insecure-development-ca.pem"
   command: [ "--config=/etc/collector-gateway.yaml" ]
   user: "0"
   depends_on:
     - tempo
     - loki
   restart: on-failure
   networks:
     opendutnet:
       ipv4_address: 192.168.32.220

 grafana:
    container_name: grafana
    image: grafana/grafana:10.4.1
    restart: unless-stopped
    depends_on:
      tempo:
        condition: service_healthy
      loki:
        condition: service_healthy
      prometheus:
        condition: service_started
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/ds.yaml
      - grafana-storage:/var/lib/grafana
    networks:
      - opendutnet

volumes:
  grafana-storage:
  tempo-data:
  loki-data:

networks:
  opendutnet:
    name: opendut_network
    external: true  # Use a pre-existing network
