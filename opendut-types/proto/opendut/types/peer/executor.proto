syntax = "proto3";

package opendut.types.peer.executor;

message ExecutorDescriptors {
  repeated opendut.types.peer.executor.ExecutorDescriptor executors = 1;
}

message ExecutorDescriptor {
  oneof descriptor {
    Executable executable = 2;
    Container container = 3;
  }
}

message Executable {}

message Container {
  Engine engine = 1;
  ContainerName name = 2;
  ContainerImage image = 3;
  repeated ContainerVolume volumes = 4;
  repeated ContainerDevice devices = 5;
  repeated ContainerEnvironmentVariable envs = 6;
  repeated ContainerPortSpec ports = 7;
  ContainerCommand command = 8;
  repeated ContainerCommandArgument args = 9;
  Precondition preconditions = 10;
  ResultsUrl results_url = 11;
}

message Engine {
  oneof inner {
    Docker docker = 1;
    Podman podman = 2;
  }
}

message TestName {
  string value = 1;
}

message Docker {}

message Podman {}

message DevicePrecondition {
  string device_id = 1;
  string clamp15 = 2;
  string clamp30 = 3;
}

message Precondition {
  repeated DevicePrecondition device_preconditions = 1;
}

message ResultsUrl {
  string value = 1;
}

message ContainerName {
  string value = 1;
}

message ContainerImage {
  string value = 1;
}

message ContainerEnvironmentVariable {
  string name = 1;
  string value = 2;
}

message ContainerVolume {
  string value = 1;
}

message ContainerDevice {
  string value = 1;
}

message ContainerPortSpec {
  string value = 1;
}

message ContainerCommand {
  string value = 1;
}

message ContainerCommandArgument {
  string value = 1;
}